<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	      http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
	 http://code.alibabatech.com/schema/dubbo
	 http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="busi-mall" >
        <!--qos是Dubbo的在线运维命令-->
        <!--是否启动QoS，默认是true-->
        <dubbo:parameter key="qos.enable" value="false" />
        <!--是否允许远程访问，默认false-->
        <dubbo:parameter key="qos.accept.foreign.ip" value="false" />
        <!--启动QoS绑定的端口，默认22222-->
        <dubbo:parameter key="qos.port" value="22222" />
    </dubbo:application>
    <!--注册中心地址-->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" />

    <!--name指示使用什么协议：dubbo/rmi/rest-->
    <dubbo:protocol id="d1"  name="dubbo" port="20880" />

    <!--全局配置-->
    <dubbo:provider timeout="3000" group="test"/>
    <dubbo:consumer check="false" />

    <dubbo:service interface="com.enjoy.service.ProductService" ref="productService" protocol="d1" />

    <!--启动时不检查-->
    <!--<dubbo:reference id="orderService" interface="com.enjoy.service.OrderService"-->
                     <!--loadbalance="roundrobin" timeout="1000" version="1.0"/>-->
    <dubbo:reference id="orderService2" interface="com.enjoy.service.OrderService" />
                     <!--check="false" -->
                     <!--retries="2" cluster="failover"-->
                     <!--loadbalance="roundrobin"-->
                     <!--cache="lru"-->
                     <!--group="group2"-->
                    <!--version="1.0"-->

    <!--异步调用 async="true" 最高粒度可以精确到方法 method-->
    <dubbo:reference  id="userService" interface="com.enjoy.service.UserService" >
        <dubbo:method name="getDetail" async="true" />
    </dubbo:reference>
    <!--整个接口 所有的方法都是异步调用-->
    <dubbo:reference  id="payService" interface="com.enjoy.service.PayService" async="true" />

    <!--回调-->
    <dubbo:reference  id="errorService" interface="com.enjoy.service.ErrorService" >
        <dubbo:method name="doSomeThing"
                      onreturn="callBack.onSuccess" onthrow="callBack.onError"/>
    </dubbo:reference>


</beans>